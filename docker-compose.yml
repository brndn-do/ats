services:
  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: "${DEV_DB_NAME:-devdb}"
      POSTGRES_USER: "${DB_USER:-postgres}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-postgres}"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DEV_DB_NAME:-devdb}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: "${S3_ACCESS_KEY:-minioadmin}"
      MINIO_ROOT_PASSWORD: "${S3_SECRET_ACCESS_KEY:-minioadmin}"
    ports:
      - "${S3_PORT:-9000}:9000" # API
      - "${S3_CONSOLE_PORT:-9001}:9001" # Web UI
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - backend_coverage:/app/coverage
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data:
  backend_node_modules:
  backend_coverage:
